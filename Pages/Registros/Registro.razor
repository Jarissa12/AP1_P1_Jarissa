@page "/Registro"
@page "/Registros /{AporteId:int}"
@inject AporteBLL aporteBLL


<EditForm Model="aporte" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">
        <div class="card-header">
            <h3>Registro de Aportes </h3>
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
        </div>
        <div class="card-body">

            @*AporteId*@
            <div class="form-r ow align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>AporteId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value=" aporte.AporteId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="bi bi-search btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                            </div> 
                        </div>
                    </div>
                </div>

                @*Fecha*@
                <div class="input-group">
                    <span class="input-group-text">Fecha</span>
                    <input type="date" @bind-value="aporte.Fecha" />
                </div>

            </div>

            @*Persona*@
            <div class="form-group">
                <label>Persona</label>
                <InputText @bind-Value="aporte.Persona" class="form-control" />
                <ValidationMessage For="@(() => aporte.Persona)" />
            </div>

            @*Observacion*@
            <div class="form-group">
                <label>observacion </label>
                <InputText @bind-Value="aporte.Observacion" class="form-control" />
                <ValidationMessage For="@(() => aporte.Observacion )" />
            </div>

            @*Observacion*@
            <div class="form-group">
                <label>Monto  </label>
                <InputNumber @bind-Value="aporte.Monto" class="form-control" />
                <ValidationMessage For="@(() => aporte.Monto )" />
            </div>
            
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class=" bi bi-file-earmark-plus btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class=" bi bi-save btn btn-lg btn-success">Guardar</button>
                <button type="button" class="  bi bi-trash3 btn btn-lg btn-danger " @onclick="Eliminar">Eliminar</button>
            </div>
        </div>
    </div>
</EditForm>

@code { 

    [Parameter]
    public int AporteId{ get; set; }
    public Aporte aporte { get; set; } =  new Aporte();
    public string Filtro { get; set; } = "";
    public string Criterio { get; set; } = "";

    public List<Aporte> lista { get; set; } = new List<Aporte>();

    protected override void OnInitialized()
    {
        if (AporteId > 0)
        {
            //si recibimos una {AporteId:int} por parametro asignarla
            // y luego buscarla para que se vea en pantalla
            this.aporte.AporteId = AporteId;
            this.Buscar();
        }
    }

    public void Nuevo()
    {
        aporte = new Aporte();
    }

    
    public void Guardar()
    {
         bool guardo = aporteBLL.Guardar(aporte);
        
        if (guardo)
        {

            
            Nuevo();
        }
    } 
    private void Buscar()
    {
        if (aporte.AporteId > 0)
        {
            var encontrado = aporteBLL.Buscar(aporte.AporteId);

            if (encontrado != null)
                this.aporte = encontrado;
        }
    }

    public void Eliminar()
    {
        bool elimino = aporteBLL.Eliminar(aporte);
        
        if (elimino)
        {
          Nuevo();
        }
    }

}